name: Python CI

on:
  push:
    branches: '**'
  pull_request:
    branches: [main, dev]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/unit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Make scripts executable
        run: chmod +x scripts/start_tf_serving.sh scripts/stop_tf_serving.sh

      - name: Start TensorFlow Serving
        run: ./scripts/start_tf_serving.sh

      - name: Wait for TF Serving to be ready
        run: |
          echo "Waiting for TF Serving to be ready..."
          for i in {1..30}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8501/v1/models/tomatoes_model)
            if [ "$status" = "200" ]; then
              echo "TF Serving is ready!"
              break
            fi
            sleep 2
          done

      - name: Run integration tests
        run: pytest tests/integration

      - name: Stop TensorFlow Serving
        if: always()
        run: ./scripts/stop_tf_serving.sh
